name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


# 環境変数の設定
# GitHub Secrets を使用して、機密情報を安全に管理
env:
  DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
  GUILD_ID:      ${{ secrets.GUILD_ID }}
  CHANNEL_ID:    ${{ secrets.CHANNEL_ID }}
  SKIP_START:    ${{ secrets.SKIP_START }}
  SKIP_END:      ${{ secrets.SKIP_END }}




jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # リポジトリをチェックアウト
      - uses: actions/checkout@v3

      # Go をセットアップ（mac/Win/Linux 共通）
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'  # 任意の最低バージョン

      - name: Create .env file
        run: |
          echo "DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}" >> .env
          echo "GUILD_ID=${{ secrets.GUILD_ID }}" >> .env
          echo "CHANNEL_ID=${{ secrets.CHANNEL_ID }}" >> .env
          echo "SKIP_START=${{ secrets.SKIP_START }}" >> .env
          echo "SKIP_END=${{ secrets.SKIP_END }}" >> .env

      # 依存解決・lint・テスト
      - name: Tidy modules
        run: |
          cd bot
          go mod tidy
      - name: Run tests
        run: |
          cd bot
          go test ./...

      # Docker をセットアップ
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Docker イメージのビルド検証
      - name: Build Docker image
        run: |
          docker build --no-cache -t vcnotify:test .

      # （オプション）イメージを registry にプッシュ
      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USER }}
      #     password: ${{ secrets.DOCKERHUB_PASS }}
      # - name: Push image
      #   run: |
      #     docker tag vcnotify:test youruser/vcnotify:latest
      #     docker push youruser/vcnotify:latest